version: '3.8'

services:
  postgresql:
    image: postgres:14
    container_name: local-postgres
    ports:
      - '5432:5432'
    env_file: .env
    networks:
      - service
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresql_data:/var/lib/postgresql/data
    

  rabbitmq:
    image: rabbitmq:3-management
    container_name: local-rabbitmq
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # management UI 
    env_file: .env
    networks:
      - service
    

  api-gateway:
    build: 
      context: ./api-gateway
    container_name: local-api-gateway
    ports:
      - '8080:8080'
    env_file: .env
    depends_on:
      postgresql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - service
    volumes:
      - ./api-gateway:/app
  
volumes:
  postgresql_data:

networks:
  service:

